package ru.example.childwatch.audio

/**
 * Audio Quality Modes for different listening scenarios
 * Provides predefined configurations for optimal audio experience
 */
enum class AudioQualityMode(
    val displayName: String,
    val description: String,
    val config: AudioEnhancer.Config
) {
    ORIGINAL(
        displayName = "üì° –û—Ä–∏–≥–∏–Ω–∞–ª",
        description = "–ë–µ–∑ –æ–±—Ä–∞–±–æ—Ç–∫–∏, —á–∏—Å—Ç—ã–π –∑–≤—É–∫ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)",
        config = AudioEnhancer.Config(
            noiseSuppressionEnabled = false,
            gainBoostDb = 0,
            compressionEnabled = false
        )
    ),

    VOICE(
        displayName = "üé§ –ì–æ–ª–æ—Å",
        description = "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è —Ä–µ—á–∏: —à—É–º–æ–ø–æ–¥–∞–≤–ª–µ–Ω–∏–µ, –∫–æ–º–ø—Ä–µ—Å—Å–∏—è, –ª—ë–≥–∫–æ–µ —É—Å–∏–ª–µ–Ω–∏–µ",
        config = AudioEnhancer.Config(
            noiseSuppressionEnabled = true,
            gainBoostDb = 2,
            compressionEnabled = true
        )
    ),

    QUIET_SOUNDS(
        displayName = "üîá –¢–∏—Ö–∏–µ –∑–≤—É–∫–∏",
        description = "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —É—Å–∏–ª–µ–Ω–∏–µ, –º–∏–Ω–∏–º—É–º —à—É–º–æ–ø–æ–¥–∞–≤–ª–µ–Ω–∏—è ‚Äî –¥–ª—è —Å–ª–∞–±—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤",
        config = AudioEnhancer.Config(
            noiseSuppressionEnabled = false,
            gainBoostDb = 6,
            compressionEnabled = true
        )
    ),

    OUTDOOR(
        displayName = "üå≥ –£–ª–∏—Ü–∞",
        description = "–ê–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ —à—É–º–æ–ø–æ–¥–∞–≤–ª–µ–Ω–∏–µ, –∑–∞—â–∏—Ç–∞ –æ—Ç –≤–µ—Ç—Ä–∞ –∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞",
        config = AudioEnhancer.Config(
            noiseSuppressionEnabled = true,
            gainBoostDb = 1,
            compressionEnabled = true
        )
    )
}

/**
 * Audio Quality Manager
 * Handles switching between different quality modes
 */
class AudioQualityManager {
    
    private var currentMode: AudioQualityMode = AudioQualityMode.ORIGINAL
    private var customConfig: AudioEnhancer.Config? = null
    
    fun getCurrentMode(): AudioQualityMode = currentMode
    
    fun setMode(mode: AudioQualityMode) {
        currentMode = mode
        customConfig = null // Reset custom config when switching modes
    }
    
    fun setCustomConfig(config: AudioEnhancer.Config) {
        customConfig = config
        currentMode = AudioQualityMode.ORIGINAL // Reset to original when using custom
    }
    
    fun getCurrentConfig(): AudioEnhancer.Config {
        return customConfig ?: currentMode.config
    }
    
    fun isCustomMode(): Boolean = customConfig != null
    
    fun resetToDefault() {
        currentMode = AudioQualityMode.ORIGINAL
        customConfig = null
    }
}
